nelmio_api_doc:
    use_validation_groups: true
    documentation:
        servers:
            - url: http://localhost:8000
              description: API over HTTP

        info:
            title: Test App
            description: Test work!
            version: 1.0.0

        components:
            securitySchemes:
                Bearer:
                    type: http
                    scheme: bearer
                    bearerFormat: JWT
            schemas:
                Credentials:
                    type: object
                    properties:
                        username:
                            type: string
                            example: ivanov@company.com
                        password:
                            type: string
                            example: Ivanov
                    required:
                        - username
                        - password
                Token:
                    type: object
                    properties:
                        token:
                            type: string

                InvalidCredentials:
                    type: object
                    properties:
                        code:
                            type: string
                        message:
                            type: string

                Success:
                    type: object
                    properties:
                        success:
                            type: boolean
                    example: { "success": true }

                NotFound:
                    type: object
                    properties:
                        error:
                            type: string
                    example: { "error": "Not found." }

                Forbidden:
                    type: object
                    properties:
                        error:
                            type: string
                    example: { "error": "Forbidden." }

                Count:
                    type: object
                    properties:
                        count:
                            type: integer
                    example: { "count": 5 }

                BadRequest:
                    type: object
                    properties:
                        errors:
                            type: object
                    example: { "errors": {"title": "This field is missing."} }

        security:
            - Bearer: [ ]

        paths:
            /api/login_check:
                post:
                    tags: [ Api login ]
                    summary: Get jwt
                    requestBody:
                        description: get jwt
                        content:
                            application/json:
                                schema:
                                    $ref: '#/components/schemas/Credentials'
                        required: true
                    responses:
                        '200':
                            description: Successful operation
                            content:
                                application/json:
                                    schema:
                                        $ref: '#/components/schemas/Token'
                        '401':
                            description: Invalid credentials
                            content:
                                application/json:
                                    schema:
                                        $ref: '#/components/schemas/InvalidCredentials'
                        '400':
                            description: Bad request

    areas: # to filter documented areas
        path_patterns:
            - ^/api(?!/doc$) # Accepts routes under /api except /api/doc

    models:
        names:
            - { alias: Application Created,  type: App\Entity\Application, groups: [ created ] }
            - { alias: Application Show,  type: App\Entity\Application, groups: [ show ] }
            - { alias: Application List,  type: App\Entity\Application, groups: [ list ] }
            - { alias: Application Update,  type: App\Entity\Application, groups: [ update ] }
            - { alias: Application Create,  type: App\Entity\Application, groups: [ create ] }